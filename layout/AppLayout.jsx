import "@fontsource/roboto/300.css";
import "@fontsource/roboto/400.css";
import "@fontsource/roboto/500.css";
import "@fontsource/roboto/700.css";
import { useEffect, useState } from "react";
import Head from "next/head";
import { styled, useTheme } from "@mui/material/styles";
import CssBaseline from "@mui/material/CssBaseline";
import Sidebar from "../components/Sidebar";
import { Box } from "@mui/material";
import authUtils from "../utils/authUtils";
import { useRouter } from "next/router";
import { useDispatch } from "react-redux";
import { setUser } from "../redux/features/userSlice";
import Loading from "../components/Loading";

const drawerWidth = 240;

const Main = styled("main", { shouldForwardProp: (prop) => prop !== "open" })(
  ({ theme, open }) => ({
    flexGrow: 1,

    padding: theme.spacing(3),
    transition: theme.transitions.create("margin", {
      easing: theme.transitions.easing.sharp,
      duration: theme.transitions.duration.leavingScreen,
    }),
    marginLeft: `-${drawerWidth}px`,
    ...(open && {
      transition: theme.transitions.create("margin", {
        easing: theme.transitions.easing.easeOut,
        duration: theme.transitions.duration.enteringScreen,
      }),
      marginLeft: 0,
    }),
  })
);

const DrawerHeader = styled("div")(({ theme }) => ({
  display: "flex",
  alignItems: "center",
  padding: theme.spacing(0, 1),
  // necessary for content to be below app bar
  ...theme.mixins.toolbar,
  justifyContent: "flex-end",
}));

const AppLayout = ({ children }) => {
  const router = useRouter();
  const [loading, setLoading] = useState(true);
  const [open, setOpen] = useState(true);
  const dispatch = useDispatch();

  useEffect(() => {
    const checkAuth = async () => {
      const user = await authUtils.isAuthenticated();

      if (!user) {
        router.push("/login");
      } else {
        dispatch(setUser(user));
        setLoading(false);
      }
    };

    checkAuth();
  }, [router]);

  return loading ? (
    <Loading fullHeight />
  ) : (
    <>
      <Head>
        <title>Kanban App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Box
        sx={{
          display: "flex",
        }}
      >
        <CssBaseline />
        <Sidebar open={open} setOpen={setOpen} />
        <Main open={open}>
          <DrawerHeader />
          {children}
        </Main>
      </Box>
    </>
  );
};

export default AppLayout;
